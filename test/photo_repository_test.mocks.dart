// Mocks generated by Mockito 5.4.4 from annotations
// in bloc_rxdart/test/photo_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:bloc_rxdart/src/data/datasources/remote/json_place_holder_api.dart/json_place_holder_api_service.dart'
    as _i2;
import 'package:bloc_rxdart/src/domain/models/album/album_model.dart' as _i8;
import 'package:bloc_rxdart/src/domain/models/comment/comment_model.dart'
    as _i7;
import 'package:bloc_rxdart/src/domain/models/photo/photo.dart' as _i5;
import 'package:bloc_rxdart/src/domain/models/post/post.dart' as _i4;
import 'package:bloc_rxdart/src/domain/models/todos/todos_model.dart' as _i6;
import 'package:bloc_rxdart/src/domain/models/user/user_model.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [JsonPlaceHolderApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonPlaceHolderApiService extends _i1.Mock
    implements _i2.JsonPlaceHolderApiService {
  MockJsonPlaceHolderApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Post>> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Post>>.value(<_i4.Post>[]),
      ) as _i3.Future<List<_i4.Post>>);

  @override
  _i3.Future<List<_i5.Photo>> getPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getPhotos,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Photo>>.value(<_i5.Photo>[]),
      ) as _i3.Future<List<_i5.Photo>>);

  @override
  _i3.Future<List<_i6.TodosModel>> getTodos() => (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [],
        ),
        returnValue: _i3.Future<List<_i6.TodosModel>>.value(<_i6.TodosModel>[]),
      ) as _i3.Future<List<_i6.TodosModel>>);

  @override
  _i3.Future<List<_i7.CommentModel>> getComments() => (super.noSuchMethod(
        Invocation.method(
          #getComments,
          [],
        ),
        returnValue:
            _i3.Future<List<_i7.CommentModel>>.value(<_i7.CommentModel>[]),
      ) as _i3.Future<List<_i7.CommentModel>>);

  @override
  _i3.Future<List<_i8.AlbumModel>> getAlbums() => (super.noSuchMethod(
        Invocation.method(
          #getAlbums,
          [],
        ),
        returnValue: _i3.Future<List<_i8.AlbumModel>>.value(<_i8.AlbumModel>[]),
      ) as _i3.Future<List<_i8.AlbumModel>>);

  @override
  _i3.Future<List<_i9.User>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i3.Future<List<_i9.User>>.value(<_i9.User>[]),
      ) as _i3.Future<List<_i9.User>>);
}
